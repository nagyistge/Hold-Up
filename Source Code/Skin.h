/***************************************************************************** * Copyright (c) 1999-2002, Pierre-Olivier Latour * http://www.pol-online.net * info@pol-online.net * * This program is free software; you can redistribute it and/or modify * it under the terms of the GNU General Public License as published by * the Free Software Foundation; either version 2 of the License, or * (at your option) any later version. *  * This program is distributed in the hope that it will be useful, * but WITHOUT ANY WARRANTY; without even the implied warranty of * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the * GNU General Public License for more details. * * You should have received a copy of the GNU General Public License * along with this program; if not, write to the Free Software * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111, USA. *****************************************************************************/#ifndef __SKIN__#define __SKIN__#ifdef __cplusplusextern "C" {#endif//Constants#define				kSkinFlag_ColorOnHide				(1 << 0)#define				kSkinFlag_DisplayWarningOffIcon		(1 << 1)#define				kSkinFlag_DisplayCheckOffIcon		(1 << 2)#define				kSkinFlag_DisplayNoteOffIcon		(1 << 3)#define				kSkinFlag_HasTitleBar				(1 << 4)#define				kImageFlag_UseAlpha					(1 << 0)#define				kFontFlag_HasShadow					(1 << 0)#define				kPositionFlag_TopLeftRelative		(1 << 8)#define				kPositionFlag_TopRightRelative		(1 << 9)#define				kPositionFlag_BottomLeftRelative	(1 << 10)#define				kPositionFlag_BottomRightRelative	(1 << 11)#define				kPositionFlag_TopMiddleRelative		(1 << 12)enum {	kSkinButton_Close = 0, //1	kSkinButton_CloseClicked,	kSkinButton_Zoom,	kSkinButton_ZoomClicked,	kSkinButton_Resize,		kSkinButton_Magic_NewAccount, //6	kSkinButton_Magic_NewAccountClicked,	kSkinButton_Magic_NewOperation,	kSkinButton_Magic_NewOperationClicked,	kSkinButton_Magic_Print,	kSkinButton_Magic_PrintClicked,		kSkinImage_Logo, //12	kSkinImage_Display,	kSkinImage_Filter,	kSkinImage_FilterSelected,	kSkinImage_NoteTag,		kSkinTitleBar_Left, //17	kSkinTitleBar_Middle,	kSkinTitleBar_Right,		kSkinIcon_Account, //20	kSkinIcon_Filter,	kSkinIcon_Lock,		kSkinIcon_WarningOn, //23	kSkinIcon_WarningOnClicked,	kSkinIcon_WarningOff,	kSkinIcon_WarningOffClicked,		kSkinIcon_CheckedOn, //27	kSkinIcon_CheckedOnClicked,	kSkinIcon_CheckedOff,	kSkinIcon_CheckedOffClicked,		kSkinIcon_Note, //31	kSkinIcon_NoteOff,		kSkinIcon_CategoryLabel, //33		kSkinListFrame_TopLeft, //34	kSkinListFrame_Top,	kSkinListFrame_TopRight,	kSkinListFrame_BottomLeft,	kSkinListFrame_Bottom,	kSkinListFrame_BottomRight,	kSkinListFrame_Left,	kSkinListFrame_Right,		kSkinSelectedListFrame_TopLeft, //42	kSkinSelectedListFrame_Top,	kSkinSelectedListFrame_TopRight,	kSkinSelectedListFrame_BottomLeft,	kSkinSelectedListFrame_Bottom,	kSkinSelectedListFrame_BottomRight,	kSkinSelectedListFrame_Left,	kSkinSelectedListFrame_Right,		kSkinIcon_ListSortedDown, //50	kSkinIcon_ListSortedUp};#define				kListFlag_HeaderUseAlpha			(1 << 0)#define				kListFlag_LinesUseAlpha				(1 << 1)#define				kListFlag_DifferentOddLines			(1 << 2)#define				kListFlag_AutoHideScrollBar			(1 << 3)#define				kListFlag_HasSortingDirectionIcon	(1 << 4)enum {	kListCorner_TopLeft = 0,	kListCorner_BottomRight,	kNumListCorners};enum {	kScrollBarImageMode_Inactive = 0,	kScrollBarImageMode_Active,	kScrollBarImageMode_Off,	kScrollBarImageMode_Disabled,	kNumScrollBarImageModes};#define				kScrollBarFlag_ArrowUseAlpha		(1 << 0)#define				kScrollBarFlag_BodyUseAlpha			(1 << 1)#define				kScrollBarFlag_ThumbUseAlpha		(1 << 2)#define				kScrollBarFlag_HasThumbMark			(1 << 3)enum {	kScrollBarPart_ArrowUp = 0, //1	kScrollBarPart_ArrowDown,		kScrollBarPart_BodyTop, //3	kScrollBarPart_BodyMiddle,	kScrollBarPart_BodyBottom,		kScrollBarPart_ThumbTop, //6	kScrollBarPart_ThumbMiddle,	kScrollBarPart_ThumbBottom,	kScrollBarPart_ThumbMark};//Structures#if PRAGMA_STRUCT_ALIGN    #pragma options align=mac68k#elif PRAGMA_STRUCT_PACKPUSH    #pragma pack(push, 2)#elif PRAGMA_STRUCT_PACK    #pragma pack(2)#endiftypedef struct {	short			height;	Point			modes[kNumScrollBarImageModes];} ScrollBarImageDefinition;typedef ScrollBarImageDefinition* ScrollBarImageDefinitionPtr;typedef struct {	unsigned short				version;	unsigned short				flags;		short						width,								step;		short						numImages;	ScrollBarImageDefinition	images[];} SkinScrollBar;typedef SkinScrollBar* SkinScrollBarPtr;typedef SkinScrollBar** SkinScrollBarHandle;typedef struct {	Point			position;	unsigned short	flags;} CornerPosition;typedef CornerPosition* CornerPositionPtr;typedef struct {	unsigned short	flags;		RGBColor		listSeparatorColor;		Point			headerImageActive,					headerImageInactive,					headerImageSelectedActive,					headerImageSelectedInactive,					headerImageSelectedOff,					headerImageSize;	short			headerTextAlignement;	Point			headerTextOffset;	RGBColor		headerSeparatorColor;	unsigned long	headerFontIndex,					headerSelectedFontIndex;		Point			lineImage,					lineImageOdd,					lineImageSelected,					lineImageSelectedOff,					lineSize;	Point			lineTextOffset;	unsigned long	lineFontIndex,					lineSelectedFontIndex,					lineOffFontIndex;						short			numPositions;	CornerPosition	positions[kNumListCorners];} ListDefinition;typedef ListDefinition* ListDefinitionPtr;typedef struct {	unsigned short	version;	unsigned short	flags;		short			numLists;	ListDefinition	lists[];} SkinLists;typedef SkinLists* SkinListsPtr;typedef SkinLists** SkinListsHandle;typedef struct {	Str63			name;	short			size;	short			style;	RGBColor		foreColor,					backColor;	unsigned short	flags;		short			cacheFontNum;} FontDefinition;typedef FontDefinition* FontDefinitionPtr;typedef struct {	unsigned short	version;	unsigned short	flags;		short			numFonts;	FontDefinition	fonts[];} SkinFonts;typedef SkinFonts* SkinFontsPtr;typedef SkinFonts** SkinFontsHandle;typedef struct {	Point			source,					dest;	Point			size;	unsigned short	flags;} ImageDefinition;typedef ImageDefinition* ImageDefinitionPtr;typedef struct {	unsigned short	version;	unsigned short	flags;		short			numImages;	ImageDefinition	images[];} SkinImages;typedef SkinImages* SkinImagesPtr;typedef SkinImages** SkinImagesHandle;typedef struct {	unsigned short	version;	unsigned short	flags;		short			skinDLOGResID;		short			skinPatternResID,					skinImageResID,					skinAlphaResID;						short			infoImageResID,					infoFontResID,					infoListResID,					infoScrollBarResID;		short			windowMinWidth,					windowMinHeight;	RGBColor		windowHideColor;						Point			filterCaptionPosition;	short			filterCaptionAlignement;	Rect			filterArea;	short			filterTextAlignement;	unsigned long	filterFontIndex;		Rect			displayArea;	Point			displayTextPosition_1,					displayTextPosition_2;	short			displayTextAlignement;	unsigned long	displayFontIndex;		Point			infoTextPosition;	short			infoTextAlignement;	unsigned long	infoFontIndex;		Rect			noteTagTextBounds;	unsigned long	noteTagFontIndex;} SkinDefinition;typedef SkinDefinition* SkinDefinitionPtr;typedef SkinDefinition** SkinDefinitionHandle;#if PRAGMA_STRUCT_ALIGN    #pragma options align=reset#elif PRAGMA_STRUCT_PACKPUSH    #pragma pack(pop)#elif PRAGMA_STRUCT_PACK    #pragma pack()#endif#ifdef __cplusplus}#endif#endif //__SKIN__