/***************************************************************************** * Copyright (c) 1999-2002, Pierre-Olivier Latour * http://www.pol-online.net * info@pol-online.net * * This program is free software; you can redistribute it and/or modify * it under the terms of the GNU General Public License as published by * the Free Software Foundation; either version 2 of the License, or * (at your option) any later version. *  * This program is distributed in the hope that it will be useful, * but WITHOUT ANY WARRANTY; without even the implied warranty of * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the * GNU General Public License for more details. * * You should have received a copy of the GNU General Public License * along with this program; if not, write to the Free Software * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111, USA. *****************************************************************************/#ifndef __FILTER__#define __FILTER__#ifndef __ACCOUNT__#include "Account.h"#endif//Constants#define		kFilter_Version					0x0100#define		kFilter_FileType				'Fltr'#define		kFilter_FileCreator				kApplication_Creator#define		kFilterFlag_Flags				(1 << 0)#define		kFilterFlag_Category			(1 << 1)#define		kFilterFlag_PaymentType			(1 << 2)#define		kFilterFlag_Amount				(1 << 3)#define		kFilterFlag_Date				(1 << 4)#define		kFilterFlag_RelativeDate		(1 << 5)#define		kFilterFlag_Name				(1 << 6)enum {	kFilterRelativeDate_Day = 1,	kFilterRelativeDate_Week,	kFilterRelativeDate_Month,	kFilterRelativeDate_Year,		kFilterRelativeDate_LastDay = 6,	kFilterRelativeDate_LastWeek,	kFilterRelativeDate_LastMonth,	kFilterRelativeDate_LastYear};//Structurestypedef struct {	unsigned long	flags;	Str255			name;	ID				targetAccount;	Str255			note;		ID				id;	Date			saveDate;		unsigned long	setFlagsMask;	ID				categoryMask,					paymentTypeMask;	Amount			amountMin,					amountMax;	Date			dateMin,					dateMax;	unsigned long	clearFlagsMask;	long			relativeDate;		unsigned short	version;		long			firstLine;						Str63			descriptionMask;		unsigned char	unused[432];} FilterData;typedef FilterData* FilterDataPtr;//Classesclass Filter{public:	FilterDataPtr		data;	private:	FSSpec				_file;	Boolean				_locked;private:	void _ReleaseFilterMemory();	void _ShowPane_General(DialogPtr dialog, short offset);	void _HidePane_General(DialogPtr dialog, short offset);	void _ShowPane_Criterion(DialogPtr dialog, short offset);	void _ClickPane_Criterion(DialogPtr dialog, short itemHit, short offset);	void _HidePane_Criterion(DialogPtr dialog, short offset);	public:	OSErr CreateNew();	OSErr WriteToDisk(FSSpec* folder);	OSErr ReadFromDisk(FSSpec* file);	OSErr RemoveFromDisk();	Boolean EditInfo();	Boolean Unlock(long accountCount, AccountPtr accountList[]);	OperationPtr BuildOperationLinkedList(long accountCount, AccountPtr accountList[], StringPtr filter = NULL);	Boolean IsLocked(long accountCount, AccountPtr accountList[]);		Filter();	~Filter();};typedef Filter* FilterPtr;#endif //__FILTER__