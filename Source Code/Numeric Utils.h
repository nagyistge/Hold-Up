/***************************************************************************** * Copyright (c) 1999-2002, Pierre-Olivier Latour * http://www.pol-online.net * info@pol-online.net * * This program is free software; you can redistribute it and/or modify * it under the terms of the GNU General Public License as published by * the Free Software Foundation; either version 2 of the License, or * (at your option) any later version. *  * This program is distributed in the hope that it will be useful, * but WITHOUT ANY WARRANTY; without even the implied warranty of * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the * GNU General Public License for more details. * * You should have received a copy of the GNU General Public License * along with this program; if not, write to the Free Software * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111, USA. *****************************************************************************/#ifndef __NUMERIC_UTILS__#define __NUMERIC_UTILS__#ifndef __APPLICATION__#include "Application.h"#endif#ifdef __cplusplusextern "C" {#endif//Constants#define			kDefaultDecimalChar			'.'#define			kNoThousandSeparator		0xFF//Macros#define	AmountToString(n, s, d, t, p) FixedRealToString(n, kAmountPrecision, s, d, t, p)#define	StringToAmount(s, n, d) StringToFixedReal(s, n, kAmountPrecision, d)#define	CurrencyFactorToString(n, s, d, t) FixedRealToString(n, kCurrencyFactorPrecision, s, d, t, true)#define	StringToCurrencyFactor(s, n, d) StringToFixedReal(s, n, kCurrencyFactorPrecision, d)#define	MesureToString(n, s, d, t) FixedRealToString(n, kMesurePrecision, s, d, t, true)#define	StringToMesure(s, n, d) StringToFixedReal(s, n, kMesurePrecision, d)//Prototypesvoid AmountToCurrencyString(Amount amount, StringPtr text, StringPtr currencySymbol, Boolean decimalPart, Boolean symbolLeads);Amount AmountByCurrencyFactor(Amount amount, CurrencyFactor factor);void FixedRealToString(FixedReal num, long numDigits, StringPtr out, unsigned char decimalChar, unsigned char thousandChar, Boolean decimalPart);void StringToFixedReal(StringPtr in, FixedReal* num, long numDigits, unsigned char decimalChar);float MesureToFloat(Mesure value);Mesure FloatToMesure(float value);#ifdef __cplusplus}#endif#endif //__NUMERIC_UTILS__