/***************************************************************************** * Copyright (c) 1999-2002, Pierre-Olivier Latour * http://www.pol-online.net * info@pol-online.net * * This program is free software; you can redistribute it and/or modify * it under the terms of the GNU General Public License as published by * the Free Software Foundation; either version 2 of the License, or * (at your option) any later version. *  * This program is distributed in the hope that it will be useful, * but WITHOUT ANY WARRANTY; without even the implied warranty of * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the * GNU General Public License for more details. * * You should have received a copy of the GNU General Public License * along with this program; if not, write to the Free Software * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111, USA. *****************************************************************************/#include			"File Utils.h"//ROUTINES:OSErr WritePtr(short fileID, void* block){	OSErr				theError;	long				blockSize = GetPtrSize((Ptr) block),						dataSize = sizeof(long);		theError = FSWrite(fileID, &dataSize, &blockSize);	if(theError)	return theError;	theError = FSWrite(fileID, &blockSize, block);	if(theError)	return theError;		return noErr;}OSErr WriteHandle(short fileID, void** block){	OSErr				theError;	long				blockSize = GetHandleSize((Handle) block),						dataSize = sizeof(long);		theError = FSWrite(fileID, &dataSize, &blockSize);	if(theError)	return theError;	theError = FSWrite(fileID, &blockSize, *block);	if(theError)	return theError;		return noErr;}OSErr ReadPtr(short fileID, void** block){	OSErr				theError;	long				blockSize,						dataSize = sizeof(long);		theError = FSRead(fileID, &dataSize, &blockSize);	if(theError)	return theError;	*block = (void*) NewPtr(blockSize);	if(*block == NULL)	return MemError();	theError = FSRead(fileID, &blockSize, *block);	if(theError)	return theError;		return noErr;}OSErr ReadHandle(short fileID, void*** block){	OSErr				theError;	long				blockSize,						dataSize = sizeof(long);		theError = FSRead(fileID, &dataSize, &blockSize);	if(theError)	return theError;	*block = (void**) NewHandle(blockSize);	if(*block == NULL)	return MemError();	theError = FSRead(fileID, &blockSize, **block);	if(theError)	return theError;		return noErr;}